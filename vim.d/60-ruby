" runpipe and send rspec colors documentation into the pipe silently

function! CurrentRubyTest()
    let current_file = expand("%:t")
    if current_file =~ '^.\+_spec.rb$'
        return "spec/**/" . current_file
    else
        return "spec/**/" . expand("%:t:r") . "_spec.rb"
    endif
endfunction

function! RspecCommand(tests)
    return "rspec -c -f d " . a:tests
endfunction

augroup ruby
    autocmd!
    autocmd FileType ruby map <leader>rt :call RunCommand(RspecCommand(CurrentRubyTest()))<cr>
    autocmd FileType ruby map <leader>pt :call PipeCommand(RspecCommand(CurrentRubyTest()))<cr>
    autocmd FileType ruby map <leader>ra :call RunCommand(RspecCommand(AllTests()))<cr>
    autocmd FileType ruby map <leader>pa :call PipeCommand(RspecCommand(AllTests()))<cr>
augroup END
